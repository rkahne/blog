{
    "collab_server" : "",
    "contents" : "---\ntags: ['Kentucky', 'R', 'Politics']\ndate: 2017-04-27T16:14:46-04:00\ntitle: \"Democratic House Targets\"\nauthor: \"Robert Kahne\"\ndate: \"April 27, 2017\"\noutput: html_document\n---\n\n```{r setup, include = F}\nknitr::opts_chunk$set(collapse = TRUE)\nlibrary(broom)\nlibrary(forcats)\nlibrary(stringr)\nlibrary(scales)\nlibrary(rgdal)\nlibrary(gpclib)\nlibrary(mapproj)\nlibrary(maptools)\nlibrary(R6)\nlibrary(leaflet)\nlibrary(stringr)\nlibrary(tidyverse)\n\ngpclibPermit()\n\n\nmissing_races <- read_csv('./data/dem_house_target/missing_races.csv')\nky_house <- read_csv('./data/dem_house_target/ky_house.csv') %>% \n  mutate(race = paste0('H',race))\nhouse_candidates <- read_csv('./data/dem_house_target/house_candidates.csv') %>% \n  mutate(race = paste0('H',race)) %>% \n  bind_rows(select(missing_races, candidate, party, race = region)) %>% \n  unique() \npresident <- read_csv('./data/dem_house_target/president.csv')\nussen <- read_csv('./output/ussen.csv')\nushouse <- read_csv('./data/dem_house_target/us_house.csv')\nlegislators <- read_csv('./data/dem_house_target/legislators.csv') %>% \n  filter(str_detect(District,'H'))\n\n\nhouse_map <- readOGR(dsn = './shapefiles/house_f', layer = 'house_map_shp')\nhouse_map@data$id <- rownames(house_map@data)\n\nhouse_crosswalk <- tibble(\n  DistrictID =c('H1','H2','H3','H4','H5','H6','H7','H8','H9','H10','H11','H12','H13','H14','H15','H16','H17','H18','H19','H20','H21','H22','H23','H24','H25','H26','H27','H28','H29','H30','H31','H32','H33','H34','H35','H36','H37','H38','H39','H40','H41','H42','H43','H44','H45','H46','H47','H48','H49','H50','H51','H52','H53','H54','H55','H56','H57','H58','H59','H60','H61','H62','H63','H64','H65','H66','H67','H68','H69','H70','H71','H72','H73','H74','H75','H76','H77','H78','H79','H80','H81','H82','H83','H84','H85','H86','H87','H88','H89','H90','H91','H92','H93','H94','H95','H96','H97','H98','H99','H100','S1','S2','S3','S4','S5','S6','S7','S8','S9','S10','S11','S12','S13','S14','S15','S16','S17','S18','S19','S20','S21','S22','S23','S24','S25','S26','S27','S28','S29','S30','S31','S32','S33','S34','S35','S36','S37','S38'),\n  DISTRICT = c(37,38,39,41,40,4,43,42,44,88,86,45,87,49,46,47,48,52,51,50,54,5,53,56,55,9,89,90,71,67,7,70,74,68,66,72,93,92,81,94,96,95,97,91,82,69,79,73,98,99,57,59,76,60,75,80,8,77,78,24,19,18,27,28,29,25,3,30,26,12,63,22,20,11,84,21,85,23,83,61,64,62,58,35,6,31,32,2,65,33,34,36,100,1,10,14,13,16,15,17,16,15,18,17,21,19,4,2,22,23,8,37,38,25,26,24,5,14,32,35,28,36,9,7,1,34,12,6,10,11,13,20,3,27,31,33,29,30),\n  chamber = cn) %>% \n  filter(chamber == 'H')\n\nget_result <- function(district_number, election){\n  house_district <- paste0('H',district_number)\n  if(election == 'kyhouse'){\n    result<-ky_house %>% filter(race == house_district) %>% \n      select(-race, -Precinct) \n  }else{\n    precincts <- filter(ky_house, race == house_district)$Precinct\n    precincts <- precincts[which(!str_detect(precincts, 'AB'))]\n    if(election == 'ussen'){\n      result<-ussen %>% filter(Precinct %in% precincts) %>% \n        select(-Precinct) \n    }else if(election == 'president'){\n      result<-president %>% filter(Precinct %in% precincts)  %>% \n        select(-Precinct)\n    }else if(election == 'ushouse'){\n      result<- ushouse %>% filter(Precinct %in% precincts)  %>% \n        select(-race,-Precinct)\n    }else NA\n  }\n  result<-result %>%\n    summarize_each(funs(sum(., na.rm = T))) %>% \n    gather(key = 'candidate', value = 'votes') %>% \n    filter(votes > 0)\n  if(election == 'kyhouse'){\n    result <- result %>%\n      left_join(filter(house_candidates, race == house_district), by = c('candidate' = 'party')) %>% \n      select(candidate = candidate.y, votes) %>%\n      filter(!is.na(candidate)) \n  }\n  result %>% \n    mutate(percent = map_chr(votes, function(i) percent_format()(i / sum(result$votes))),\n           percent_raw = map_dbl(votes, function(i) i / sum(result$votes)),\n           region = house_district)\n}\n\nconsolidated_kyhouse_result <- map2(1:100, 'kyhouse', get_result) %>% bind_rows() %>% \n  left_join(house_candidates %>% select(-race)) %>% \n  bind_rows(missing_races)\nconsolidated_ushouse_result <- map2(1:100, 'ushouse', get_result) %>% bind_rows()\nconsolidated_presisdential_result <- map2(1:100, 'president', get_result) %>% bind_rows()\nconsolidated_ussen_result <- map2(1:100, 'ussen', get_result) %>% bind_rows()\n\nget_candidate <- function(region, a_party){\n  e <- filter(house_candidates, party == a_party, race == region)\n  if(nrow(e) == 0) NA\n  else e$candidate\n}\n\nget_kyhouse_pct <- function(i){\n  ifelse(is.na(i), NA, consolidated_kyhouse_result$percent_raw[which(consolidated_kyhouse_result$candidate == i)])\n}\n\nget_ussen_pct <- function(name, district){\n  ifelse(ncol(filter(consolidated_ussen_result, candidate == name, region == district)) == 0, \n         NA, \n         filter(consolidated_ussen_result, candidate == name, region == district)$percent_raw)\n}\n\nget_pres_pct <- function(name, district){\n  ifelse(ncol(filter(consolidated_presisdential_result, candidate == name, region == district)) == 0, \n         NA, \n         filter(consolidated_presisdential_result, candidate == name, region == district)$percent_raw)\n}\n\nget_ushouse_pct <- function(name, district){\n  ifelse(ncol(filter(consolidated_ushouse_result, candidate == name, region == district)) == 0,\n         NA,\n         filter(consolidated_ushouse_result, candidate == name, region == district)$percent_raw)\n}\n\nmap_metadata <- tibble(\n  DISTRICT = house_map$DISTRICT,\n  house_district = map_chr(DISTRICT, function(i){\n    house_crosswalk$DistrictID[which(house_crosswalk$DISTRICT == i)]\n  }),\n  kyhouse_dem_candidate = map2_chr(house_district, 'Dem', get_candidate),\n  kyhouse_gop_candidate = map2_chr(house_district, 'GOP', get_candidate),\n  kyhouse_dem_pct = map_dbl(kyhouse_dem_candidate, get_kyhouse_pct),\n  kyhouse_gop_pct = map_dbl(kyhouse_gop_candidate, get_kyhouse_pct),\n  gray_pct = map2_dbl('Jim GRAY', house_district, get_ussen_pct),\n  paul_pct = map2_dbl('Rand PAUL', house_district, get_ussen_pct),\n  trump_pct = map2_dbl('Donald J. TRUMP / Michael R. PENCE', house_district, get_pres_pct),\n  clinton_pct = map2_dbl('Hillary Rodham CLINTON / Timothy Michael KAINE', house_district, get_pres_pct),\n  ushouse_dem_pct = map2_dbl('Dem', house_district, get_ushouse_pct),\n  ushouse_gop_pct = map2_dbl('GOP', house_district, get_ushouse_pct),\n  min_gop_pct = pmap_dbl(list(kyhouse_gop_pct, paul_pct, trump_pct, ushouse_gop_pct), function(kyhouse, paul, trump, ushouse){\n    ifelse(is.infinite(min(kyhouse, paul, trump, ushouse, na.rm=T)), NA, min(kyhouse, paul, trump, ushouse, na.rm=T))\n  }),\n  representative = map_chr(house_district, function(i) legislators$Full.Name[which(legislators$District == i)]),\n  current_party = map_chr(house_district, function(i) legislators$Party[which(legislators$District == i)]),\n  first_elected = map_chr(house_district, function(i) legislators$First.Elected[which(legislators$District == i)])\n)\n\nget_gop_perf_diff <- function(gop, dem, comp){\n  if(is.na(gop) | is.na(comp)) NA\n  else if(gop > dem | is.na(dem)) gop - comp\n  else NA\n}\n\nperformance_list <- list(\n  performance = map_metadata  %>%\n    mutate(sen_diff = pmap_dbl(list(kyhouse_gop_pct, kyhouse_dem_pct, paul_pct), get_gop_perf_diff),\n      ushouse_diff = pmap_dbl(list(kyhouse_gop_pct, kyhouse_dem_pct, ushouse_gop_pct), get_gop_perf_diff),\n      presidential_diff =pmap_dbl(list(kyhouse_gop_pct, kyhouse_dem_pct, trump_pct), get_gop_perf_diff)) %>% \n    select(DISTRICT, house_district, representative, first_elected, sen_diff, ushouse_diff, presidential_diff, kyhouse_gop_pct),\n  underperformed_everyone = map_metadata %>% \n    filter(current_party == 'Republican', \n           kyhouse_gop_pct < trump_pct, kyhouse_gop_pct < paul_pct, kyhouse_gop_pct < ushouse_gop_pct) %>%\n    mutate(sen_diff = kyhouse_gop_pct - paul_pct,\n           ushouse_diff = kyhouse_gop_pct - ushouse_gop_pct,\n           presidential_diff = kyhouse_gop_pct - trump_pct) %>% \n    select(DISTRICT, house_district, representative, first_elected, sen_diff, ushouse_diff, presidential_diff, kyhouse_gop_pct),\n  close = map_metadata %>% \n    filter(current_party == 'Republican', kyhouse_gop_pct < .55, kyhouse_gop_pct > .5) %>%\n    select(DISTRICT, house_district, representative, first_elected, kyhouse_gop_pct),\n  close_pres = map_metadata %>% \n    filter(current_party == 'Republican', trump_pct < .55, kyhouse_gop_pct > .5) %>%\n    select(DISTRICT, house_district, representative, first_elected, kyhouse_gop_pct, trump_pct),\n  close_sen = map_metadata %>% \n    filter(current_party == 'Republican', paul_pct < .55, kyhouse_gop_pct > .5) %>%\n    select(DISTRICT, house_district, representative, first_elected, kyhouse_gop_pct, paul_pct),\n  close_ushouse = map_metadata %>% \n    filter(current_party == 'Republican', ushouse_gop_pct < .55, kyhouse_gop_pct > .5) %>%\n    select(DISTRICT, house_district, representative, first_elected, kyhouse_gop_pct, ushouse_gop_pct)\n)\n\nmap_metadata <- map_metadata %>%\n  mutate(close = map_lgl(house_district, function(i) i %in% performance_list$close$house_district),\n         close_pres = map_lgl(house_district, function(i) i %in% performance_list$close_pres$house_district),\n         close_sen = map_lgl(house_district, function(i) i %in% performance_list$close_sen$house_district),\n         close_ushouse = map_lgl(house_district, function(i) i %in% performance_list$close_ushouse$house_district)) %>% \n  left_join(performance_list$performance %>% select(DISTRICT, ends_with('_diff')))\n\n\ncolor_function<-function(percent, color){\n  if(color == 'red'){\n    if(percent < .05) '#fee5d9'\n    else if(percent < .1) '#fcae91'\n    else if(percent < .25) '#fb6a4a'\n    else if(percent < .33) '#de2d26'\n    else '#a50f15'\n  }else if(color == 'blue'){\n    if(percent < .05) '#eff3ff'\n    else if(percent < .1) '#bdd7e7'\n    else if(percent < .25) '#6baed6'\n    else if(percent < .33) '#3182bd'\n    else '#08519c'\n  }else 'white'\n}\n\ncolor_function_s<-function(percent){\n  if(is.na(percent)) NA\n  else{\n    if(percent < -.33) '#a50f15' \n    else if(percent < -.25) '#de2d26' \n    else if(percent < -.1) '#fb6a4a'\n    else if(percent < -.05) '#fcae91'\n    else if(percent < 0) '#fee5d9'\n    else if(percent < .05) '#eff3ff'\n    else if(percent < .1) '#bdd7e7'\n    else if(percent < .25) '#6baed6'\n    else if(percent < .33) '#3182bd'\n    else '#08519c'\n  }\n}\n\ncolor_function_perf<-function(percent){\n  if(is.na(percent)) 'white'\n  else{\n    if(percent < .5) '#238B45'\n    else if(percent < .6) '#74c476'\n    else if(percent < .7) '#bae4b3'\n    else '#EDF8E9' \n  }\n}\n\n\n\nmake_kyhouse_leaflet <- function(){\n  \n  house_map@data <- merge(house_map@data, map_metadata, by = 'DISTRICT')\n  \n  house_map$color <- map2_chr(house_map$kyhouse_dem_pct, house_map$kyhouse_gop_pct, function(dem, gop){\n    if(is.na(dem) & is.na(gop)) 'white'\n    else if(is.na(dem)) color_function(1, 'red')\n    else if(is.na(gop)) color_function(1, 'blue')\n    else if(dem > gop) color_function(dem - gop, 'blue')\n    else if(gop > dem) color_function(gop - dem, 'red')\n    else 'white'\n  })\n  \n  house_map$opacity <- map_dbl(house_map$color, function(i) ifelse(i == 'white', 0.0, 0.66))\n  \n  pop <- pmap_chr(\n    list(house_map$representative, house_map$current_party,house_map$first_elected, house_map$kyhouse_dem_candidate, \n         house_map$kyhouse_gop_candidate, house_map$kyhouse_dem_pct, house_map$kyhouse_gop_pct),\n    function(representative,current_party,first_elected, kyhouse_dem_candidate, kyhouse_gop_candidate, kyhouse_dem_pct, kyhouse_gop_pct){\n      val <- paste0('<strong>Representative: ',representative,'<br>Party: ',current_party,\n             '<br>First Elected: ',first_elected,'</strong>')\n      if(is.na(kyhouse_gop_candidate) & is.na(kyhouse_dem_candidate)){\n        val\n      }else if(is.na(kyhouse_dem_candidate)){\n        paste0(val,'<br><br>',kyhouse_gop_candidate,', GOP: ',percent_format()(kyhouse_gop_pct))\n      }else if(is.na(kyhouse_gop_candidate)){\n        paste0(val,'<br><br>',kyhouse_dem_candidate,', Dem: ',percent_format()(kyhouse_dem_pct))\n      }else{\n        paste0(val,'<br><br>',kyhouse_gop_candidate,', GOP: ',percent_format()(kyhouse_gop_pct),'<br>',\n               kyhouse_dem_candidate,', Dem: ',percent_format()(kyhouse_dem_pct))\n      }\n  })\n  \n  leaflet(data = house_map) %>% \n    addTiles() %>% \n    addPolygons(data = house_map, stroke = F, smoothFactor=0.2, fillOpacity = house_map$opacity, color=house_map$color, popup=pop) %>% \n    addPolylines(weight=2, color='black')%>% \n    addLegend(position = 'topright', \n              colors = c('#fee5d9', '#fcae91', '#fb6a4a', '#de2d26', '#a50f15', '#eff3ff', '#bdd7e7', '#6baed6', '#3182bd', '#08519c'), \n              labels = c('R < 5%', 'R 5-10%', 'R 10-25%', 'R 25-33%', 'R >33%', 'D < 5%', 'D 5-10%', 'D 10-25%', 'D 25-33%', 'D >33%'),\n              title = 'Margins in Kentucky House Elections, 2016')\n}\n\nmake_elex_leaflet <- function(metadata, names, the_title){\n  house_map@data <- merge(house_map@data, metadata, by = 'DISTRICT')\n  \n  house_map$color <- map2_chr(house_map$dem_pct, house_map$gop_pct, function(dem, gop){\n    if(is.na(dem) & is.na(gop)) 'white'\n    else if(is.na(dem)) color_function(1, 'red')\n    else if(is.na(gop)) color_function(1, 'blue')\n    else if(dem > gop) color_function(dem - gop, 'blue')\n    else if(gop > dem) color_function(gop - dem, 'red')\n    else 'white'\n  })\n  \n  house_map$opacity <- map_dbl(house_map$color, function(i) ifelse(i == 'white', 0.0, 0.66))\n  \n  pop <- pmap_chr(\n    list(house_map$representative, house_map$current_party,house_map$first_elected, house_map$dem_pct, house_map$gop_pct),\n    function(representative,current_party,first_elected,dem_pct, gop_pct){\n      val <- paste0('<strong>Representative: ',representative,'<br>Party: ',current_party,\n                    '<br>First Elected: ',first_elected,'</strong>')\n      if(is.na(dem_pct) & is.na(gop_pct)){\n        val\n      }else{\n        paste0(val,'<br><br>',names[1],': ',percent_format()(gop_pct),'<br>',\n               names[2],': ',percent_format()(dem_pct))\n      }\n    })\n  \n  leaflet(data = house_map) %>% \n    addTiles() %>% \n    addPolygons(data = house_map, stroke = F, smoothFactor=0.2, fillOpacity = house_map$opacity, color=house_map$color, popup=pop) %>% \n    addPolylines(weight=2, color='black') %>% \n    addLegend(position = 'topright', \n              colors = c('#fee5d9', '#fcae91', '#fb6a4a', '#de2d26', '#a50f15', '#eff3ff', '#bdd7e7', '#6baed6', '#3182bd', '#08519c'), \n              labels = c('R < 5%', 'R 5-10%', 'R 10-25%', 'R 25-33%', 'R >33%', 'D < 5%', 'D 5-10%', 'D 10-25%', 'D 25-33%', 'D >33%'),\n              title = the_title)\n}\n\nmake_perf_leaflet <- function(metadata, name, the_title){\n  house_map@data <- merge(house_map@data, metadata, by = 'DISTRICT')\n  \n  house_map$color <- map_chr(house_map$pct, color_function_perf) %>% \n    map2_chr(house_map$current_party, function(color, party){\n      if(party == 'Democratic') '#ffff99'\n      else color\n    })\n  \n  house_map$opacity <- map_dbl(house_map$color, function(i) ifelse(i == 'white', 0.0, 0.66))\n  \n  pop <- pmap_chr(\n    list(house_map$representative, house_map$current_party,house_map$first_elected, house_map$pct),\n    function(representative,current_party,first_elected,pct){\n      val <- paste0('<strong>Representative: ',representative,'<br>Party: ',current_party,\n                    '<br>First Elected: ',first_elected,'</strong>')\n      if(is.na(pct)){\n        val\n      }else{\n        paste0(val,'<br><br>',name,': ',percent_format()(pct))\n      }\n    })\n  \n  leaflet(data = house_map) %>% \n    addTiles() %>% \n    addPolygons(data = house_map, stroke = F, smoothFactor=0.2, fillOpacity = house_map$opacity, color=house_map$color, popup=pop) %>% \n    addPolylines(weight=2, color='black') %>% \n    addLegend(position = 'topright', \n              colors = c('#ffff99', '#238B45', '#74c476', '#bae4b3', '#EDF8E9'), \n              labels = c('Democrat', '< 50%', '50-60%', '60-70%', '>70%'),\n              title = the_title)\n}\n\nmake_kyhouse_leaflet()\nmake_elex_leaflet(map_metadata %>% mutate(dem_pct = clinton_pct, gop_pct = trump_pct), c('Trump', 'Clinton'), \n                  'Presidential Margin by House District, 2016')\nmake_elex_leaflet(map_metadata %>% mutate(dem_pct = gray_pct, gop_pct = paul_pct), \n                  c('Paul', 'Gray'), 'US Senate Margin by House District, 2016')\nmake_elex_leaflet(map_metadata %>% mutate(dem_pct = ushouse_dem_pct, gop_pct = ushouse_gop_pct), c('Dem', 'GOP'), \n                  'US House Margin by House District, 2016')\nmake_perf_leaflet(map_metadata %>% mutate(pct = min_gop_pct), \n                  'Minimum GOP Percentage', 'Lowest Vote for Republican')\n\n```\n",
    "created" : 1493313228970.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1514745797",
    "id" : "19F345A3",
    "lastKnownWriteTime" : 1493326116,
    "last_content_update" : 1493326116987,
    "path" : "~/R/blog/content/post/dem_house_targets.Rmd",
    "project_path" : "content/post/dem_house_targets.Rmd",
    "properties" : {
        "last_setup_crc32" : "10066F61f8c2bbac",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}